name: Build

on: 
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - uses: actions/checkout@v3

    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: downcase REPO
      run: |
        echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

    - name: Build image
      uses: docker/build-push-action@v5
      with:
        push: false
        tags: ${{ env.REGISTRY }}/${{ env.REPO }}:${{ steps.tag_version.outputs.new_tag }}, ${{ env.REGISTRY }}/${{ env.REPO }}:latest

    - name: Build image with tests
      uses: docker/build-push-action@v5
      with:
        file: Dockerfile_tests
        push: false
        tags: ${{ env.REGISTRY }}/${{ env.REPO }}:tests

    - name: Test coverage
      run: |
        mkdir coverage
        docker compose up -d mysql
        docker compose up app-coverage
        rm -rf coverage/.gitignore

    - name: push coverage
      uses: EndBug/add-and-commit@v9
      with:
        author_name: Alex Macedonsky
        author_email: yano.motoharu.kikuchi@gmail.com
        message: 'Add code coverage report'
        add: 'coverage'
        pull: '-r'
        push: true

    - name: Deploy to GitHub Pages
      uses: crazy-max/ghaction-github-pages@v4
      with:
        target_branch: main
        build_dir: coverage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: coverage/index.html
